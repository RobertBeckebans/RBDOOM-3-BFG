

/*
	Generated by the Material Editor.
	Type 'materialeditor' at the console to launch the material editor.
*/
models/monsters/hunter_invul/invun_shell
{
	translucent
	nonsolid
	noSelfShadow
	deform particle inv_electro
	renderbump	-size 512 1024 -aa 2 -colormap models/monsters/hunter_invul/invun_shell_local.tga models/monsters/hunter_invul/invun_shell_hi2.lwo
	diffusemap	models/monsters/hunter_invul/invun_shell.tga
	bumpmap	addnormals(models/monsters/hunter_invul/invun_shell_local.tga, heightmap(models/monsters/hunter_invul/invun_shell_h.tga, 4 ) )
	specularmap	models/monsters/hunter_invul/invun_shell_s.tga
}


/*
	Generated by the Material Editor.
	Type 'materialeditor' at the console to launch the material editor.
*/
models/monsters/hunter_invul/invul_1_new
{
	renderbump	-size 1024 1024 -aa 2 -colorMap textures/pat/invul_1_new.tga textures/pat/invul_half_hi_z.lwo
	unsmoothedTangents
	{
		map textures/common/nodraw.tga
	}
}

models/monsters/hunter_invul/invul_1_new2
{
	deform particle inv_electro2
	renderbump	-size 1024 1024 -aa 2 -colorMap textures/pat/invul_1_new.tga textures/pat/invul_half_hi_z.lwo
	unsmoothedTangents
	{
		map textures/common/nodraw.tga
	}
}

models/monsters/hunter_invul/invun_shell_summon
{
	translucent
	nonsolid
	noSelfShadow
	deform particle inv_electro
	renderbump	-size 512 1024 -aa 2 -colormap models/monsters/hunter_invul/invun_shell_local.tga models/monsters/hunter_invul/invun_shell_hi2.lwo
	diffusemap	models/monsters/hunter_invul/invun_shell.tga
/*	{
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		highQuality
		map models/monsters/hunter_invul/invun_shell_dis.tga	// replace this with a monster-specific texture
		alphaTest 1.0-(0.3 * (time + parm4))
	}
	{
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
        blend add
        blend gl_one, gl_zero
		highQuality
		map models/monsters/hunter_invul/invun_shell_dis.tga	// replace this with a monster-specific texture
		alphaTest 1.0-(0.05 + 0.3 * (time + parm4))
	}
*/
	bumpmap	addnormals(models/monsters/hunter_invul/invun_shell_local.tga, heightmap(models/monsters/hunter_invul/invun_shell_h.tga, 4 ) )
	specularmap	models/monsters/hunter_invul/invun_shell_s.tga
}

models/monsters/hunter_invul/invun_shell_shutdown
{
	translucent
	nonsolid
	noSelfShadow
	deform particle inv_electro
	renderbump	-size 512 1024 -aa 2 -colormap models/monsters/hunter_invul/invun_shell_local.tga models/monsters/hunter_invul/invun_shell_hi2.lwo
	diffusemap	models/monsters/hunter_invul/invun_shell.tga
	bumpmap	addnormals(models/monsters/hunter_invul/invun_shell_local.tga, heightmap(models/monsters/hunter_invul/invun_shell_h.tga, 4 ) )
	specularmap	models/monsters/hunter_invul/invun_shell_s.tga

/*	{
		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		highQuality
		map models/monsters/hunter_invul/invun_shell_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time + parm4)
	}
	{
		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
        blend add
        blend gl_one, gl_zero
		highQuality
		map models/monsters/hunter_invul/invun_shell_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time + parm4)
	}
*/
}







textures/sfx/inv_lightning1a
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/inv_lightning1
		translate	1,time*3
		red			s_lightningtable [(time*.5)+(.33+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.33+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.33+parm4)] * parm2
		scale		1,ember1 [time*.75]
	}
}

textures/sfx/inv_lightning1b
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/inv_lightning1
		translate	1,time*1.5
		red			s_lightningtable [(time*.5)+(.66+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.66+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.66+parm4)] * parm2
		scale		1,ember1 [time*1.5]
	}
}

textures/sfx/inv_lightning1c
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/inv_lightning1
		translate	1,time*1.5
		red			s_lightningtable [(time*.5)+(.88+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.88+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.88+parm4)] * parm2
		scale		1,ember1 [time*1.5]
	}
}

textures/sfx/inv_lightning1d
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/inv_lightning1
		translate	1,time*1.5
		red			s_lightningtable [(time*.5)+(.25+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.25+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.25+parm4)] * parm2
		scale		1,ember1 [time*1.5]
	}
}

textures/sfx/inv_lightning2a
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/inv_lightning2
		red			s_lightningtable [(time*.5)+(.33+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.33+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.33+parm4)] * parm2
		centerscale	s_lightningtable2[time*4], s_lightningtable2[time*4]
		zeroclamp
	}
}

textures/sfx/inv_lightning2b
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/inv_lightning2
		red			s_lightningtable [(time*.5)+(.66+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.66+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.66+parm4)] * parm2
		centerscale	s_lightningtable2[time*4], s_lightningtable2[time*4]
		zeroclamp
	}
}

textures/sfx/inv_lightning2c
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/inv_lightning2
		red			s_lightningtable [(time*.5)+(.88+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.88+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.88+parm4)] * parm2
		centerscale	s_lightningtable2[time*4], s_lightningtable2[time*4]
		zeroclamp
	}
}

textures/sfx/inv_lightning2d
{
	translucent
	twosided
	noshadows
	nonsolid
	{
		blend		add
		map			textures/sfx/inv_lightning2
		red			s_lightningtable [(time*.5)+(.25+parm4)] * parm0
		green		s_lightningtable [(time*.5)+(.25+parm4)] * parm1
		blue		s_lightningtable [(time*.5)+(.25+parm4)] * parm2
		centerscale	s_lightningtable2[time*4], s_lightningtable2[time*4]
		zeroclamp
	}
}



/////////////////////////////////
//
//	INVULNERABLE PAT SKIN
//
/////////////////////////////////

models/monsters/hunter_invul/pjinvul_1
{
	renderbump		-size 1024 1024 -aa 2  -colorMap textures/pat/invul_1_new.tga textures/pat/invul_half_hi_z.lwo
	noselfShadow
	flesh
	unsmoothedTangents
	bumpmap	addnormals(models/monsters/hunter_invul/pjinvul_1_local.tga, heightmap(models/monsters/hunter_invul/pjinvul_1_h, 4 ) )
	diffusemap		models/monsters/hunter_invul/pjinvul_1_d
	specularmap		models/monsters/hunter_invul/pjinvul_1_s
	{
		maskcolor
		map makealpha(models/monsters/hunter_invul/pjinvul_1_glow.tga)

	}
	{
	        blend gl_dst_alpha, gl_one
			maskalpha
		    map models/monsters/hunter_invul/pjinvul_fx.tga
			red   .7
			blue  1
			green .7
			translate	time * 0.2 , time * 1.1
	}
}

models/monsters/hunter_invul/pjinvul_2
{
	deform particle inv_electro2
	renderbump		-size 1024 1024 -aa 2  -colorMap textures/pat/invul_1_new.tga textures/pat/invul_half_hi_z.lwo
	noselfShadow
	flesh
	unsmoothedTangents
	bumpmap	addnormals(models/monsters/hunter_invul/pjinvul_1_local.tga, heightmap(models/monsters/hunter_invul/pjinvul_1_h, 4 ) )
	diffusemap		models/monsters/hunter_invul/pjinvul_1_d
	specularmap		models/monsters/hunter_invul/pjinvul_1_s
	{
		maskcolor
		map makealpha(models/monsters/hunter_invul/pjinvul_1_glow.tga)

	}
	{
	        blend gl_dst_alpha, gl_one
			maskalpha
		    map models/monsters/hunter_invul/pjinvul_fx.tga
			red   .7
			blue  1
			green .7
			translate	time * 0.2 , time * 1.1
	}
}

models/monsters/hunter_invul/pjinvul_2_burn
{
	deform particle inv_electro2
	renderbump		-size 1024 1024 -aa 2  -colorMap textures/pat/invul_1_new.tga textures/pat/invul_half_hi_z.lwo
	noselfShadow
	flesh
	unsmoothedTangents

	{	// burning corpse effect
		if	parm7			// only when dead

		// make a burned away alpha test for the normal skin
		blend	gl_zero, gl_one			// don't draw anything
		highQuality
		noclamp map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.05 + 0.3 * (time - parm7)
	}
	{	// burning corpse effect
		if parm7			// only when dead

		// draw the fire burn at a negative polygonOffset, so it is behind the other stages
		privatePolygonOffset	-1		// stage-only polygon offset
        blend add
        blend gl_one, gl_zero
		highQuality
		noclamp map models/monsters/spectre/global_dis.tga	// replace this with a monster-specific texture
		alphaTest 0.3 * (time - parm7)
	}

	bumpmap	addnormals(models/monsters/hunter_invul/pjinvul_1_local.tga, heightmap(models/monsters/hunter_invul/pjinvul_1_h, 4 ) )
	diffusemap		models/monsters/hunter_invul/pjinvul_1_d
	specularmap		models/monsters/hunter_invul/pjinvul_1_s
	{
		maskcolor
		map makealpha(models/monsters/hunter_invul/pjinvul_1_glow.tga)

	}
	{
	        blend gl_dst_alpha, gl_one
			maskalpha
		    map models/monsters/hunter_invul/pjinvul_fx.tga
			red   .7
			blue  1
			green .7
			translate	time * 0.2 , time * 1.1
	}
}

models/monsters/hunter_invul/pjinvul_2_metal
{
	deform particle inv_electro2
	renderbump		-size 1024 1024 -aa 2  -colorMap textures/pat/invul_1_new.tga textures/pat/invul_half_hi_z.lwo
	noselfShadow
	metal
	unsmoothedTangents
	bumpmap	addnormals(models/monsters/hunter_invul/pjinvul_1_local.tga, heightmap(models/monsters/hunter_invul/pjinvul_1_h, 4 ) )
	diffusemap		models/monsters/hunter_invul/pjinvul_1_d
	specularmap		models/monsters/hunter_invul/pjinvul_1_s
	{
		maskcolor
		map makealpha(models/monsters/hunter_invul/pjinvul_1_glow.tga)

	}
	{
	        blend gl_dst_alpha, gl_one
			maskalpha
		    map models/monsters/hunter_invul/pjinvul_fx.tga
			red   .7
			blue  1
			green .7
			translate	time * 0.2 , time * 1.1
	}
}

/////////////////////////////////
//
//	INVULNERABLE SHELL PAT SKIN
//
/////////////////////////////////

models/monsters/hunter_invul/pjinvul_shell_1

{

	noselfShadow
	flesh
	unsmoothedTangents
	bumpmap	addnormals(models/monsters/hunter_invul/pjinvun_shell_1_local.tga, heightmap(models/monsters/hunter_invul/pjinvun_shell_1_h, 5 ) )
//	bumpmap			models/monsters/hunter_invul/pjinvun_shell_1_local
	diffusemap		models/monsters/hunter_invul/pjinvun_shell_1_d
	specularmap		models/monsters/hunter_invul/pjinvun_shell_1_s
/*

	{
//		if	( parm7 == 0 )
		maskcolor
		map makealpha(models/monsters/hunter_invul/pjinvun_shell_1_glow.tga)

	}
	{
//		if	( parm7 == 0 )
	        blend gl_dst_alpha, gl_one
			maskalpha
		     map models/monsters/hunter_invul/pjinvul_fx.tga
//			red color 1 .18 0
//			blue color .68 .95 1
//			red   parm8
//			blue  parm9
//			green parm10
			red   .68
			blue  .95
			green 1
			translate	time * 0.2 , time * 1.1
	}

*/

}
